{
  "artifacts": [],
  "command": "define_and_train",
  "experiment": {
    "base_dir": "/global/home/hpc4987/Hybrid_Network_Models/Iris_Experiment",
    "dependencies": [
      "keras==2.7.0+computecanada",
      "numpy==1.22.2+computecanada",
      "PennyLane==0.21.0",
      "sacred==0.8.2",
      "scikit-learn==1.0.1+computecanada",
      "tensorflow==2.7.0+computecanada",
      "tensorflow-datasets==4.5.2"
    ],
    "mainfile": "Iris_Experiment.py",
    "name": "Iris_test",
    "repositories": [
      {
        "commit": "ca485fd77227d6677a24a98b69feb6dd5acd83b8",
        "dirty": false,
        "url": "https://github.com/hayman314/Hybrid_Network_Models"
      },
      {
        "commit": "ca485fd77227d6677a24a98b69feb6dd5acd83b8",
        "dirty": false,
        "url": "https://github.com/hayman314/Hybrid_Network_Models"
      }
    ],
    "sources": [
      [
        "CV_quantum_layers.py",
        "_sources/CV_quantum_layers_f1781edf0f21d2fbfa9cc302a9658ce9.py"
      ],
      [
        "Iris_Experiment.py",
        "_sources/Iris_Experiment_92ba2014e2fb76a0b83113c42d8ac00b.py"
      ]
    ]
  },
  "fail_trace": [
    "Traceback (most recent call last):\n",
    "  File \"/global/home/hpc4987/.local/lib/python3.9/site-packages/sacred/config/captured_function.py\", line 42, in captured_function\n    result = wrapped(*args, **kwargs)\n",
    "  File \"/global/home/hpc4987/Hybrid_Network_Models/Iris_Experiment/Iris_Experiment.py\", line 126, in define_and_train\n    model = Net()\n",
    "  File \"/global/home/hpc4987/Hybrid_Network_Models/Iris_Experiment/Iris_Experiment.py\", line 111, in __init__\n    self.main = QuantumLayer(n_qumodes=2,\n",
    "  File \"/global/home/hpc4987/Hybrid_Network_Models/Iris_Experiment/CV_quantum_layers.py\", line 135, in __init__\n    self.circuit_layer = build_cv_neural_network(n_qumodes, n_outputs, n_layers, cutoff_dim, encoding_method, self.regularizer, input_amplitude, meas_method = \"X_quadrature\")\n",
    "  File \"/global/home/hpc4987/Hybrid_Network_Models/Iris_Experiment/CV_quantum_layers.py\", line 74, in build_cv_neural_network\n    cv_nn = build_cv_quantum_node(n_qumodes, n_outputs, cutoff_dim, encoding_method, meas_method)\n",
    "  File \"/global/home/hpc4987/Hybrid_Network_Models/Iris_Experiment/CV_quantum_layers.py\", line 24, in build_cv_quantum_node\n    dev = qml.device(\"strawberryfields.tf\", wires=n_qumodes, cutoff_dim=cutoff_dim)\n",
    "  File \"/global/home/hpc4987/.local/lib/python3.9/site-packages/pennylane/__init__.py\", line 305, in device\n    raise DeviceError(\"Device does not exist. Make sure the required plugin is installed.\")\n",
    "pennylane._device.DeviceError: Device does not exist. Make sure the required plugin is installed.\n"
  ],
  "heartbeat": "2022-03-10T18:32:21.859030",
  "host": {
    "ENV": {},
    "cpu": "Intel(R) Xeon(R) Gold 5118 CPU @ 2.30GHz",
    "hostname": "caclogin03",
    "os": [
      "Linux",
      "Linux-3.10.0-1160.49.1.el7.x86_64-x86_64-with-glibc2.30"
    ],
    "python_version": "3.9.6"
  },
  "meta": {
    "command": "define_and_train",
    "options": {
      "--beat-interval": null,
      "--capture": null,
      "--comment": null,
      "--debug": false,
      "--enforce_clean": false,
      "--file_storage": null,
      "--force": false,
      "--help": false,
      "--loglevel": null,
      "--mongo_db": null,
      "--name": null,
      "--pdb": false,
      "--print-config": false,
      "--priority": null,
      "--queue": false,
      "--s3": null,
      "--sql": null,
      "--tiny_db": null,
      "--unobserved": false
    }
  },
  "resources": [],
  "result": null,
  "start_time": "2022-03-10T18:32:21.618622",
  "status": "FAILED",
  "stop_time": "2022-03-10T18:32:21.871640"
}